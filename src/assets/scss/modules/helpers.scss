/* ==========================================================================
       Helper classes
       ========================================================================== */

@-webkit-keyframes spinner /* Safari and Chrome */ {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes spinner {
  from {
    -ms-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -ms-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.hidden,
[hidden] {
  display: none !important;
}

@mixin mb($value) {
  .mb-#{$value} {
    margin-bottom: $value;
  }
}
@mixin mt($value) {
  .mt-#{$value} {
    margin-top: $value;
  }
}
// Call the mixin with different values to generate classes
$margin-values: 0em 1em 2em 3em 4em 5em;

@each $value in $margin-values {
  @include mb($value);
  @include mt($value);
}

.mr-1em {
  margin-right: 1em;
}
.ml-1em {
  margin-left: 1em;
}

[aria-busy="true"] {
  cursor: progress;
}
a[aria-busy="true"],
button[aria-busy="true"],
input[type="button"][aria-busy="true"],
input[type="reset"][aria-busy="true"],
input[type="submit"][aria-busy="true"] {
  pointer-events: none;
}
[aria-busy="true"]:not(input, select, textarea, html):not(:empty)::before {
  margin-right: 0.4rem;
  margin-left: 0;
  -webkit-margin-start: 0;
  margin-inline-start: 0;
  -webkit-margin-end: 0.4rem;
  margin-inline-end: 0.4rem;
}
[aria-busy="true"]:not(input, select, textarea, html)::before {
  display: inline-block;
  width: 0.75em;
  height: 0.75em;
  border: 0.1875em solid currentColor;
  border-radius: 1em;
  border-right-color: transparent;
  content: "";
  vertical-align: -0.175em;
  animation: spinner 0.75s linear infinite;
  opacity: 0.9;
}

.center {
  text-align: center;
}

.fixed {
  z-index: 1;
  position: fixed;
  left: 50%;
  top: 130px;
  transform: translate(-50%, 0);
  display: block;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  &.success {
    background: rgba(114, 249, 102, 0.3);
  }
  &.content {
    top: 50%;
    transform: translate(-50%, -120%);
  }
}

.link {
  color: $primary-link-color;
  cursor: pointer;
}

.edit::before {
  content: "‚úé ";
}
.create::before {
  content: "üìù ";
}
@media only screen and (max-width: 500px) {
  /* Style adjustments for viewports that meet the condition */
  .fixed.content {
    top: 35%;
  }
  .fixed.success {
    left: 2em;
    right: 2em;
    transform: translate(0, 0);
  }
}
